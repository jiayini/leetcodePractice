/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        ListNode l3 = new ListNode(0);
        ListNode p = l1, q = l2, curr = l3;
        if (p == null && q == null) {
            return l3.next;
        }
        while (p != null && q != null) {
            if (p.val < q.val) {
                curr.next = new ListNode(p.val);
                curr = curr.next;
                p = p.next;
            } else if (p.val == q.val) {
                curr.next = new ListNode(q.val);
                curr = curr.next;
                curr.next = new ListNode(p.val);
                curr = curr.next;
                q = q.next;
                p = p.next;
            } else {
                curr.next = new ListNode(q.val);
                curr = curr.next;
                q = q.next;
            }
        }
        if (p == null) {
            curr.next = q;
        } else {
            curr.next = p;
        }

        return l3.next;
    }
}
