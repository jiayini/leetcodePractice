/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
       ListNode l3 = new ListNode(0);
       ListNode p = l1, q = l2, current = l3;
       int add = 0;
       while (p != null || q != null) {
           int x = p != null ? p.val : 0;
           int y = q != null ? q.val : 0;
           int sum = add + x + y;
           add = sum / 10;
           current.next = new ListNode(sum % 10);
           current = current.next;
           if (p != null) p = p.next;
           if (q != null) q = q.next;
       }
    //     while (p != null && q != null) {
    //         int sum = add + p.val + q.val;
    //         add = sum / 10;
    //         current.next = new ListNode(sum % 10);
    //         System.out.println(current.next.val);
    //         current = current.next;
    //         p = p.next;
    //         q = q.next;
    // }
    // if (p == null) {
    //     while (q != null) {
    //     int sum = add + q.val;
    //     add = sum / 10;
    //     current.next = new ListNode(sum % 10);
    //     current = current.next;
    //     q = q.next;
    //     }
    // } else {
    //      while (p != null) {
    //         int sum = add + p.val;
    //         add = sum / 10;
    //         current.next = new ListNode(sum % 10);
    //         current = current.next;
    //         p = p.next;
    //     }
    // }

    if(add == 1) {
            current.next = new ListNode(add);
        }

       return l3.next;
    }
}
